version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
          keys:
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-d50d25b673345b01cf916d1910439ea63e895f08-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f.tar.gz
          key: build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-6919cd327fd098fa9cac37213654422a23e69b8b-{{checksum ".buildcache/cache-keys/package-6919cd327fd098fa9cac37213654422a23e69b8b"}}
          name: Restore package cache
      - restore_cache:
          key: package-45e20b99a94f6c375f8c0e443ebfb28b009acd95-{{checksum ".buildcache/cache-keys/package-45e20b99a94f6c375f8c0e443ebfb28b009acd95"}}
          name: Restore package cache
      - restore_cache:
          key: package-bef9eafa8a9adba115f7d787ee3e73a0544761b5-{{checksum ".buildcache/cache-keys/package-bef9eafa8a9adba115f7d787ee3e73a0544761b5"}}
          name: Restore package cache
      - restore_cache:
          key: package-43f18f765a59b14b9ac9148f9c9901163681a679-{{checksum ".buildcache/cache-keys/package-43f18f765a59b14b9ac9148f9c9901163681a679"}}
          name: Restore package cache
      - restore_cache:
          key: package-4b845b9591d4909bff5a5dd2756505978dc6acc2-{{checksum ".buildcache/cache-keys/package-4b845b9591d4909bff5a5dd2756505978dc6acc2"}}
          name: Restore package cache
      - restore_cache:
          key: package-a1e6f908c37b9969daec49568520798c855f6ee4-{{checksum ".buildcache/cache-keys/package-a1e6f908c37b9969daec49568520798c855f6ee4"}}
          name: Restore package cache
      - restore_cache:
          key: package-ce94664c77c79941e02927b35c1e6ec718364cff-{{checksum ".buildcache/cache-keys/package-ce94664c77c79941e02927b35c1e6ec718364cff"}}
          name: Restore package cache
      - restore_cache:
          key: package-d34e55c92c8b2be7fab8b5053a4449ae38964121-{{checksum ".buildcache/cache-keys/package-d34e55c92c8b2be7fab8b5053a4449ae38964121"}}
          name: Restore package cache
      - restore_cache:
          key: package-a3e61658b18645cc95446c46b6b45ef899b445c3-{{checksum ".buildcache/cache-keys/package-a3e61658b18645cc95446c46b6b45ef899b445c3"}}
          name: Restore package cache
      - restore_cache:
          key: package-b3d3e764cc77f5db67bb588c28f989821987bc10-{{checksum ".buildcache/cache-keys/package-b3d3e764cc77f5db67bb588c28f989821987bc10"}}
          name: Restore package cache
      - restore_cache:
          key: package-02ec3527d53df292a70b0a61f0e09481b9eb7f27-{{checksum ".buildcache/cache-keys/package-02ec3527d53df292a70b0a61f0e09481b9eb7f27"}}
          name: Restore package cache
      - restore_cache:
          key: package-b7b0ecda9544400ab8d65124b230c5969c786525-{{checksum ".buildcache/cache-keys/package-b7b0ecda9544400ab8d65124b230c5969c786525"}}
          name: Restore package cache
      - restore_cache:
          key: package-ff18c7878a7913a32be548288ee1f8abde4a5bca-{{checksum ".buildcache/cache-keys/package-ff18c7878a7913a32be548288ee1f8abde4a5bca"}}
          name: Restore package cache
      - restore_cache:
          key: package-32e5817de0c3cb666301e70cc80c7b5158c5367a-{{checksum ".buildcache/cache-keys/package-32e5817de0c3cb666301e70cc80c7b5158c5367a"}}
          name: Restore package cache
      - restore_cache:
          key: package-fa35da445be9605ce15fbd214118afbcebacd7be-{{checksum ".buildcache/cache-keys/package-fa35da445be9605ce15fbd214118afbcebacd7be"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-1973802ee6f7e7e5.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-1973802ee6f7e7e5.tar.gz .buildcache/packages lockfile-1973802ee6f7e7e5.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-1973802ee6f7e7e5.tar.gz .buildcache/packages/store/*.json lockfile-1973802ee6f7e7e5.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-1973802ee6f7e7e5.yml
      - store_artifacts:
          path: packages-1973802ee6f7e7e5.tar.gz
      - store_artifacts:
          path: meta-1973802ee6f7e7e5.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6919cd327fd098fa9cac37213654422a23e69b8b-{{checksum ".buildcache/cache-keys/package-6919cd327fd098fa9cac37213654422a23e69b8b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6919cd327fd098fa9cac37213654422a23e69b8b-{{checksum ".buildcache/cache-keys/package-6919cd327fd098fa9cac37213654422a23e69b8b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6919cd327fd098fa9cac37213654422a23e69b8b
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-45e20b99a94f6c375f8c0e443ebfb28b009acd95-{{checksum ".buildcache/cache-keys/package-45e20b99a94f6c375f8c0e443ebfb28b009acd95"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-45e20b99a94f6c375f8c0e443ebfb28b009acd95-{{checksum ".buildcache/cache-keys/package-45e20b99a94f6c375f8c0e443ebfb28b009acd95"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 45e20b99a94f6c375f8c0e443ebfb28b009acd95
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bef9eafa8a9adba115f7d787ee3e73a0544761b5-{{checksum ".buildcache/cache-keys/package-bef9eafa8a9adba115f7d787ee3e73a0544761b5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bef9eafa8a9adba115f7d787ee3e73a0544761b5-{{checksum ".buildcache/cache-keys/package-bef9eafa8a9adba115f7d787ee3e73a0544761b5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bef9eafa8a9adba115f7d787ee3e73a0544761b5
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-43f18f765a59b14b9ac9148f9c9901163681a679-{{checksum ".buildcache/cache-keys/package-43f18f765a59b14b9ac9148f9c9901163681a679"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-43f18f765a59b14b9ac9148f9c9901163681a679-{{checksum ".buildcache/cache-keys/package-43f18f765a59b14b9ac9148f9c9901163681a679"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 43f18f765a59b14b9ac9148f9c9901163681a679
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4b845b9591d4909bff5a5dd2756505978dc6acc2-{{checksum ".buildcache/cache-keys/package-4b845b9591d4909bff5a5dd2756505978dc6acc2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4b845b9591d4909bff5a5dd2756505978dc6acc2-{{checksum ".buildcache/cache-keys/package-4b845b9591d4909bff5a5dd2756505978dc6acc2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4b845b9591d4909bff5a5dd2756505978dc6acc2
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a1e6f908c37b9969daec49568520798c855f6ee4-{{checksum ".buildcache/cache-keys/package-a1e6f908c37b9969daec49568520798c855f6ee4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a1e6f908c37b9969daec49568520798c855f6ee4-{{checksum ".buildcache/cache-keys/package-a1e6f908c37b9969daec49568520798c855f6ee4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a1e6f908c37b9969daec49568520798c855f6ee4
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ce94664c77c79941e02927b35c1e6ec718364cff-{{checksum ".buildcache/cache-keys/package-ce94664c77c79941e02927b35c1e6ec718364cff"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ce94664c77c79941e02927b35c1e6ec718364cff-{{checksum ".buildcache/cache-keys/package-ce94664c77c79941e02927b35c1e6ec718364cff"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ce94664c77c79941e02927b35c1e6ec718364cff
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d34e55c92c8b2be7fab8b5053a4449ae38964121-{{checksum ".buildcache/cache-keys/package-d34e55c92c8b2be7fab8b5053a4449ae38964121"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d34e55c92c8b2be7fab8b5053a4449ae38964121-{{checksum ".buildcache/cache-keys/package-d34e55c92c8b2be7fab8b5053a4449ae38964121"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d34e55c92c8b2be7fab8b5053a4449ae38964121
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a3e61658b18645cc95446c46b6b45ef899b445c3-{{checksum ".buildcache/cache-keys/package-a3e61658b18645cc95446c46b6b45ef899b445c3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a3e61658b18645cc95446c46b6b45ef899b445c3-{{checksum ".buildcache/cache-keys/package-a3e61658b18645cc95446c46b6b45ef899b445c3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a3e61658b18645cc95446c46b6b45ef899b445c3
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b3d3e764cc77f5db67bb588c28f989821987bc10-{{checksum ".buildcache/cache-keys/package-b3d3e764cc77f5db67bb588c28f989821987bc10"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b3d3e764cc77f5db67bb588c28f989821987bc10-{{checksum ".buildcache/cache-keys/package-b3d3e764cc77f5db67bb588c28f989821987bc10"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b3d3e764cc77f5db67bb588c28f989821987bc10
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-02ec3527d53df292a70b0a61f0e09481b9eb7f27-{{checksum ".buildcache/cache-keys/package-02ec3527d53df292a70b0a61f0e09481b9eb7f27"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-02ec3527d53df292a70b0a61f0e09481b9eb7f27-{{checksum ".buildcache/cache-keys/package-02ec3527d53df292a70b0a61f0e09481b9eb7f27"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 02ec3527d53df292a70b0a61f0e09481b9eb7f27
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b7b0ecda9544400ab8d65124b230c5969c786525-{{checksum ".buildcache/cache-keys/package-b7b0ecda9544400ab8d65124b230c5969c786525"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b7b0ecda9544400ab8d65124b230c5969c786525-{{checksum ".buildcache/cache-keys/package-b7b0ecda9544400ab8d65124b230c5969c786525"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b7b0ecda9544400ab8d65124b230c5969c786525
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ff18c7878a7913a32be548288ee1f8abde4a5bca-{{checksum ".buildcache/cache-keys/package-ff18c7878a7913a32be548288ee1f8abde4a5bca"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ff18c7878a7913a32be548288ee1f8abde4a5bca-{{checksum ".buildcache/cache-keys/package-ff18c7878a7913a32be548288ee1f8abde4a5bca"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ff18c7878a7913a32be548288ee1f8abde4a5bca
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-32e5817de0c3cb666301e70cc80c7b5158c5367a-{{checksum ".buildcache/cache-keys/package-32e5817de0c3cb666301e70cc80c7b5158c5367a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-32e5817de0c3cb666301e70cc80c7b5158c5367a-{{checksum ".buildcache/cache-keys/package-32e5817de0c3cb666301e70cc80c7b5158c5367a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 32e5817de0c3cb666301e70cc80c7b5158c5367a
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fa35da445be9605ce15fbd214118afbcebacd7be-{{checksum ".buildcache/cache-keys/package-fa35da445be9605ce15fbd214118afbcebacd7be"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_4f8a_{{checksum ".buildcache/cache-keys/copy-source-4f8a01fa0e06f9ad2f07a54bca7e01955f6341b6"}}
          keys:
            - warm-go-build-vendor-cache_de71_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-de715b4d006f2b1959e13d46c202731bd8ffd23b"}}
            - build-static-assets_9c1b_{{checksum ".buildcache/cache-keys/build-static-assets-9c1b9f6de8d722293380cb40c380fd9abe6328eb"}}
            - build-ui_b8ce_{{checksum ".buildcache/cache-keys/build-ui-b8ce944bf6915c36b234973fc0d966db211ea57f"}}
            - ui-dependencies_1804_{{checksum ".buildcache/cache-keys/ui-dependencies-1804be87b00add2a8e715f90df37c7ed75b7483e"}}
            - install-yarn_5261_{{checksum ".buildcache/cache-keys/install-yarn-5261a683a2e0a2efd89cca8ea21c37d1e2266d74"}}
            - set-workdir_91ed_{{checksum ".buildcache/cache-keys/set-workdir-91ed6789639df06d48c2e2e56af5d5b4820503f6"}}
            - install-go-tools_62c6_{{checksum ".buildcache/cache-keys/install-go-tools-62c6eccaf61ea4274529d727cea12dd20de1e044"}}
            - install-go_d50d_{{checksum ".buildcache/cache-keys/install-go-d50d25b673345b01cf916d1910439ea63e895f08"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fa35da445be9605ce15fbd214118afbcebacd7be-{{checksum ".buildcache/cache-keys/package-fa35da445be9605ce15fbd214118afbcebacd7be"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fa35da445be9605ce15fbd214118afbcebacd7be
workflows:
  build-1973802ee6f7e7e5:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
